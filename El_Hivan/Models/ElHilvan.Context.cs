//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace El_Hivan.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ElHilvanEntities : DbContext
    {
        public ElHilvanEntities()
            : base("name=ElHilvanEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Arreglo> Arreglo { get; set; }
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Empresa> Empresa { get; set; }
        public virtual DbSet<Nota> Nota { get; set; }
        public virtual DbSet<NotaPrenda> NotaPrenda { get; set; }
        public virtual DbSet<Prenda> Prenda { get; set; }
        public virtual DbSet<TipoPrenda> TipoPrenda { get; set; }
    
        public virtual ObjectResult<BusquedaAr_Result> BusquedaAr(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaAr_Result>("BusquedaAr", nombreParameter);
        }
    
        public virtual ObjectResult<BusquedaPr_Result> BusquedaPr(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BusquedaPr_Result>("BusquedaPr", nombreParameter);
        }
    
        public virtual ObjectResult<Cliente_Result> Cliente(Nullable<int> cliente)
        {
            var clienteParameter = cliente.HasValue ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cliente_Result>("Cliente", clienteParameter);
        }
    
        public virtual ObjectResult<EditFindNotaPrenda_Result> EditFindNotaPrenda(Nullable<int> notaPrenda)
        {
            var notaPrendaParameter = notaPrenda.HasValue ?
                new ObjectParameter("NotaPrenda", notaPrenda) :
                new ObjectParameter("NotaPrenda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EditFindNotaPrenda_Result>("EditFindNotaPrenda", notaPrendaParameter);
        }
    
        public virtual ObjectResult<NotaConImpor_Result> NotaConImpor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NotaConImpor_Result>("NotaConImpor");
        }
    
        public virtual ObjectResult<PrecioNotaPrenda_Result> PrecioNotaPrenda(Nullable<int> prenda, Nullable<int> arreglo)
        {
            var prendaParameter = prenda.HasValue ?
                new ObjectParameter("Prenda", prenda) :
                new ObjectParameter("Prenda", typeof(int));
    
            var arregloParameter = arreglo.HasValue ?
                new ObjectParameter("Arreglo", arreglo) :
                new ObjectParameter("Arreglo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrecioNotaPrenda_Result>("PrecioNotaPrenda", prendaParameter, arregloParameter);
        }
    
        public virtual ObjectResult<TipoArregloYPrecio_Result> TipoArregloYPrecio(Nullable<int> prenda)
        {
            var prendaParameter = prenda.HasValue ?
                new ObjectParameter("Prenda", prenda) :
                new ObjectParameter("Prenda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TipoArregloYPrecio_Result>("TipoArregloYPrecio", prendaParameter);
        }
    }
}
